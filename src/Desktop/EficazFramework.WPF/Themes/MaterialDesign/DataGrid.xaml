<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="clr-namespace:EficazFramework.Controls"
                    xmlns:wpfp="clr-namespace:EficazFramework.Controls.Primitives"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
                    xmlns:converters_md="clr-namespace:MaterialDesignThemes.Wpf.Converters">

    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters_md:TextFieldClearButtonVisibilityConverter x:Key="ClearTextConverter" />
    <converters:TextFieldPrefixTextVisibilityConverter x:Key="PrefixTextVisibilityConverter" />
    <converters:NotConverter x:Key="NotConverter" />
    <converters:MathConverter x:Key="MathMultiplyConverter" Operation="Multiply" />
    <converters_md:FloatingHintOffsetCalculationConverter x:Key="FloatingHintOffsetCalculationConverter" />



    <Style x:Key="MaterialDesignDataGridInteractiveTextColumnEditingStyle" TargetType="{x:Type wpfp:InteractiveTextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="Margin" Value="-1 0 -1 -4" />
        <Setter Property="BorderThickness" Value="0 0 0 2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpfp:InteractiveTextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                            Padding="0 0 0 2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                            <md:SmartHint x:Name="Hint"
                                           Margin="1 0"
                                           Hint="{Binding Path=(md:HintAssist.Hint), RelativeSource={RelativeSource TemplatedParent}}"
                                           HintProxy="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:HintProxyFabricConverter.Instance}}"
                                           FontSize="{TemplateBinding FontSize}"
                                           FontFamily="{TemplateBinding md:HintAssist.FontFamily}"
                                           HintOpacity="{Binding Path=(md:HintAssist.HintOpacity), RelativeSource={RelativeSource TemplatedParent}}"
                                           UseFloating="{Binding Path=(md:HintAssist.IsFloating), RelativeSource={RelativeSource TemplatedParent}}"
                                           />
                            <StackPanel Orientation="Horizontal" Grid.Column="1">
                                <Button x:Name="PART_ClearButton"
                                        Margin="0"
                                        Height="Auto"
                                        Padding="2,0,0,0"
                                        Focusable="False"
                                        Style="{DynamicResource MaterialDesignToolButton}">
                                    <Button.Visibility>
                                        <MultiBinding Converter="{StaticResource ClearButtonVisibilityConverter}">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(md:TextFieldAssist.HasClearButton)" />
                                            <Binding ElementName="Hint" Path="IsContentNullOrEmpty" />
                                        </MultiBinding>
                                    </Button.Visibility>
                                    <md:PackIcon Margin="0" Kind="CloseCircle" />
                                </Button>
                                <Button x:Name="PART_CommandButton"
                                                        Margin="0"
                                                        Height="Auto"
                                                        Padding="2,0,0,0"
                                                        Focusable="False"
                                                        Content="{TemplateBinding CommandContent}"
                                                        Command="{TemplateBinding CommandPopup}"
                                                        Style="{DynamicResource MaterialDesignToolButton}">
                                </Button>
                            </StackPanel>


                            <Popup Name="PART_Popup"
                               MinHeight="{TemplateBinding MinHeight}"
                               MaxHeight="{TemplateBinding MaxHeight}"
                               MaxWidth="{TemplateBinding MaxWidth}"
                               HorizontalAlignment="{TemplateBinding PopupHorizontalAlignment}"
                               PopupAnimation="Slide" 
                               IsOpen="{TemplateBinding IsPopupOpened}" 
                               StaysOpen="True"    
                               AllowsTransparency="True">
                                <ContentPresenter Focusable="False" Content="{TemplateBinding PopupContent}" ContentTemplate="{TemplateBinding PopupContentTemplate}" />
                            </Popup>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialDesignDataGridDatePickerColumnEditingStyle" TargetType="{x:Type wpf:DateInputBox}" BasedOn="{StaticResource MaterialDesignDataGridInteractiveTextColumnEditingStyle}">
        <Setter Property="CommandContent">
            <Setter.Value>
                <md:PackIcon Margin="0" Kind="Calendar" />
            </Setter.Value>
        </Setter>
        <Setter Property="PopupContent">
            <Setter.Value>
                <md:Card Margin="6" Padding="0,-3" Focusable="False" IsTabStop="False" md:ShadowAssist.ShadowDepth="Depth2">
                    <Calendar Style="{StaticResource MaterialDesignDatePickerCalendarPortrait}" />
                </md:Card>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialDesignDataGridSearchBoxColumnEditingStyle" TargetType="{x:Type wpfp:InteractiveTextBox}" BasedOn="{StaticResource MaterialDesignDataGridInteractiveTextColumnEditingStyle}">
        <Setter Property="PopupMinHeight" Value="100" />
        <Setter Property="md:TextFieldAssist.HasClearButton" Value="True"/>
        <Setter Property="PopupMinWidth" Value="{Binding DesiredSize.Width, Source={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="CommandContent">
            <Setter.Value>
                <md:PackIcon Margin="0" Kind="Magnify" />
            </Setter.Value>
        </Setter>
        <Setter Property="PopupContent">
            <Setter.Value>
                <md:Card md:ShadowAssist.ShadowDepth="Depth2" Margin="6" Padding="0,-3" IsTabStop="False" Focusable="False">
                    <Grid>
                        <ListBox x:Name="PART_ListBox" IsSynchronizedWithCurrentItem="True" IsTabStop="False" Focusable="False">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignToolToggleListBoxItem}">
                                    <Setter Property="IsTabStop" Value="False" />
                                    <Setter Property="Padding" Value="8" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                        <ProgressBar x:Name="PART_LoaderBar" IsIndeterminate="True" Width="60" />
                    </Grid>
                </md:Card>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>