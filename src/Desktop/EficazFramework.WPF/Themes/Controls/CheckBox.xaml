<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:EfControls="clr-namespace:EficazFramework.Controls"
    xmlns:EfAttachedProps="clr-namespace:EficazFramework.Controls.AttachedProperties"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Surface.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" 
                          Background="Transparent" 
                          SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard TargetName="MouseOverPresenter">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="0.25" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard TargetName="FocusedPresenter">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard TargetName="FocusedPresenter">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <EfControls:ColorZone x:Name="mainColorZone" 
                                            EfAttachedProps:Control.CornerRadius="3" 
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Margin="1"  >
                            <Border x:Name="checkBoxBorder" 
                                    CornerRadius="3" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"
                                    Height="20" Width="20">
                                <Grid x:Name="markGrid">
                                    <EfControls:Icon x:Name="optionMark" 
                                                   Width="12" Height="12"
                                                   Data="M81.890625,21.890625L86.109375,26.109375 36,76.265625 9.890625,50.109375 14.109375,45.890625 36,67.734375 81.890625,21.890625z" 
                                                   Margin="3" Visibility="Hidden"/>
                                    <Rectangle x:Name="indeterminateMark"
                                               Fill="{Binding ElementName=mainColorZone, Path=Foreground}"
                                               Margin="4" Visibility="Hidden"/>
                                </Grid>
                            </Border>
                        </EfControls:ColorZone>
                        <ContentPresenter x:Name="contentPresenter" 
                                          TextElement.Foreground="{TemplateBinding Foreground}" 
                                          Grid.Column="1" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.LayoutTransform>
                                <TranslateTransform Y="4" />
                            </ContentPresenter.LayoutTransform>
                        </ContentPresenter>
                        <Rectangle x:Name="FocusedPresenter" StrokeThickness="2" Stroke="{Binding ElementName=mainColorZone, Path=Foreground}" RadiusX="2" RadiusY="2" Height="20" Width="20"  Opacity="0"/>
                        <Rectangle x:Name="MouseOverPresenter" StrokeThickness="0" Fill="{Binding ElementName=mainColorZone, Path=Foreground}" RadiusX="2" RadiusY="2" Height="20" Width="20" Opacity="0"  />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="false">
                            <Setter Property="Padding" Value="0,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource Brush.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource Brush.Disabled.Background}"/>
                            <Setter Property="Background" TargetName="optionMark" Value="{DynamicResource Brush.Brush.Disabled.Background}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{DynamicResource Brush.Disabled.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="optionMark" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="indeterminateMark" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="optionMark" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="indeterminateMark" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Surface">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="SurfaceAlternate">
                <Setter Property="Foreground" Value="{DynamicResource Brush.SurfaceAlternate.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Primary">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="PrimaryDarken">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="PrimaryLighten">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Secondary">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Tertiary">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}" x:Key="Style.Checkbox.Modern">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Surface.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Margin="{TemplateBinding Padding}" x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard TargetName="MouseOverPresenter">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="0.25" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard TargetName="FocusedPresenter">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard TargetName="FocusedPresenter">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                x:Name="checkBoxBorder" 
                                HorizontalAlignment="Left" 
                                Height="22"
                                Width="44"
                                CornerRadius="10" 
                                VerticalAlignment="Top">
                            <Grid x:Name="markGrid">
                                <Ellipse Height="12" Width="12"
                                         x:Name="optionMark" 
                                         Fill="{TemplateBinding Foreground}"
                                         VerticalAlignment="Center"
                                         Margin="0"
                                         RenderTransformOrigin="0.5,0.5" >
                                    <Ellipse.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform X="-10"/>
                                        </TransformGroup>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                                <Rectangle x:Name="indeterminateMark" Fill="{TemplateBinding Foreground}" Visibility="Collapsed" Margin="5" RadiusX="5" RadiusY="5" StrokeThickness="0" />
                            </Grid>
                        </Border>
                        <Border x:Name="FocusedPresenter" 
                                   BorderThickness="2"
                                   BorderBrush="{TemplateBinding Foreground}" 
                                   Height="22"
                                   Width="44"
                                   Margin="0,0,0,0"
                                   CornerRadius="10" 
                                   VerticalAlignment="Top"
                                   Opacity="0"/>
                        <Border x:Name="MouseOverPresenter"
                                   BorderThickness="0"
                                   Background="{TemplateBinding Foreground}" 
                                   Height="22"
                                   Width="44"
                                   Margin="0,0,0,0"
                                   CornerRadius="10" 
                                   VerticalAlignment="Top"
                                   Opacity="0"  />
                        <ContentPresenter x:Name="contentPresenter" 
                                          Grid.Column="1" 
                                          Margin="5,1,0,0"
                                          Focusable="False" 
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="false">
                            <Setter TargetName="checkBoxBorder" Property="Margin" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard >
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.150" To="10" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="optionMark"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.150" To="-10" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="optionMark"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Visibility" TargetName="indeterminateMark" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="indeterminateMark" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="optionMark" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Surface">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
                <Setter Property="Background" Value="{DynamicResource Brush.Surface.Background}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="SurfaceAlternate">
                <Setter Property="Foreground" Value="{DynamicResource Brush.SurfaceAlternate.Foreground}"/>
                <Setter Property="Background" Value="{DynamicResource Brush.SurfaceAlternate.Background}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Primary">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Primary.Foreground}"/>
                <Setter Property="Background" Value="{DynamicResource Brush.Primary.Background}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="PrimaryDarken">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Primary.Foreground}"/>
                <Setter Property="Background" Value="{DynamicResource Brush.Primary.Background.Darken}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="PrimaryLighten">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Primary.Foreground}"/>
                <Setter Property="Background" Value="{DynamicResource Brush.Primary.Background.Lighten}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Secondary">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Secondary.Foreground}"/>
                <Setter Property="Background" Value="{DynamicResource Brush.Secondary.Background}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Tertiary">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Tertiary.Foreground}"/>
                <Setter Property="Background" Value="{DynamicResource Brush.Tertiary.Background}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="false">
                <Setter Property="Background" Value="{DynamicResource Brush.Darken}"/>
                <Setter Property="BorderThickness" Value="2"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Background" Value="{DynamicResource Brush.Darken}"/>
                <Setter Property="BorderThickness" Value="2"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="{DynamicResource Brush.Disabled.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Disabled.Background}"/>
                <Setter Property="Foreground"  Value="{DynamicResource Brush.Disabled.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
