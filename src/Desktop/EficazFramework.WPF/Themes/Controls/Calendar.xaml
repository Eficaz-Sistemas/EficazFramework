<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:EfControls="clr-namespace:EficazFramework.Controls"
                    xmlns:EfAttachedProps="clr-namespace:EficazFramework.Controls.AttachedProperties">

    <Style x:Key="Style.Calendar.DayButton" TargetType="{x:Type CalendarDayButton}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="36" />
        <Setter Property="Height" Value="36" />
        <Setter Property="Margin" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"
                               Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.15" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To=".35" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected" >
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To=".0" Duration="0:0:0.15" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To=".75" Duration="0:0:0.15" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="RegularDay" />
                                <VisualState x:Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="TodayBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active" />
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" Duration="0">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BlackoutDayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NormalDay" />
                                <VisualState x:Name="BlackoutDay">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BlackoutVisual" Storyboard.TargetProperty="Opacity" To=".2" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Ellipse x:Name="TodayBackground" Opacity="0" StrokeThickness="1" Stroke="{TemplateBinding BorderBrush}" />
                        <Ellipse x:Name="SelectedBackground" Opacity="0" Fill="{TemplateBinding BorderBrush}" />
                        <Ellipse x:Name="Background" Opacity="0" Fill="{DynamicResource Brush.Surface.Border}" />

                        <ContentControl x:Name="Content"
                                        Foreground="{TemplateBinding Foreground}"
                                        TextBlock.Foreground="{TemplateBinding Foreground}"
                                        IsTabStop="False"
                                        Content="{TemplateBinding Content}" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                        FontSize="{TemplateBinding FontSize}" Margin="7" />

                        <EfControls:Icon x:Name="BlackoutVisual" Opacity="0" Margin="3" 
                                             HorizontalAlignment="Stretch" 
                                             VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5"
                                             Foreground="{DynamicResource Brush.Error.Background}" 
                                             Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z" />
                        <Border x:Name="FocusVisual" 
                                Visibility="Collapsed"
                                IsHitTestVisible="false" 
                                BorderThickness="1" 
                                BorderBrush="{DynamicResource Brush.Control.Calendar.Border}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Surface">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="SurfaceAlternate">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.SurfaceAlternate.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Primary">
                <Setter Property="Background" Value="{DynamicResource Brush.Primary.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Primary.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Primary.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="PrimaryDarken">
                <Setter Property="Background" Value="{DynamicResource Brush.Primary.Background.Darken}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Primary.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="PrimaryLighten">
                <Setter Property="Background" Value="{DynamicResource Brush.Primary.Background.Lighten}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Primary.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Secondary">
                <Setter Property="Background" Value="{DynamicResource Brush.Secondary.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Secondary.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Tertiary">
                <Setter Property="Background" Value="{DynamicResource Brush.Tertiary.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Tertiary.Foreground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource Brush.Disabled.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Darken}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Disabled.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="Style.Calendar.Button" TargetType="{x:Type CalendarButton}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Margin" Value="0,20"/>
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"
                               Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To=".75" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Rectangle x:Name="SelectedBackground" RadiusX="5" RadiusY="5" Opacity="0" Fill="{TemplateBinding Background}" />
                        <Rectangle x:Name="Background" RadiusX="5" RadiusY="5" Opacity="0" Fill="{DynamicResource Brush.Surface.Border}" />

                        <ContentControl x:Name="Content" Foreground="{TemplateBinding Foreground}" IsTabStop="False" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FontSize="{TemplateBinding FontSize}" Margin="1,0,1,1"  TextElement.Foreground="{TemplateBinding Foreground}"/>

                        <Border x:Name="FocusVisual" CornerRadius="5" Visibility="Collapsed" IsHitTestVisible="false" BorderBrush="{DynamicResource Brush.Control.Calendar.Border}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource Brush.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Surface">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="SurfaceAlternate">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.SurfaceAlternate.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Primary">
                <Setter Property="Background" Value="{DynamicResource Brush.Primary.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Primary.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Primary.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="PrimaryDarken">
                <Setter Property="Background" Value="{DynamicResource Brush.Primary.Background.Darken}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Primary.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="PrimaryLighten">
                <Setter Property="Background" Value="{DynamicResource Brush.Primary.Background.Lighten}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Primary.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Secondary">
                <Setter Property="Background" Value="{DynamicResource Brush.Secondary.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Secondary.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Tertiary">
                <Setter Property="Background" Value="{DynamicResource Brush.Tertiary.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Tertiary.Foreground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource Brush.Disabled.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Darken}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Disabled.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Calendar}">
        <Setter Property="SelectedDate" Value="{x:Static sys:DateTime.Now}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                        <CalendarItem x:Name="PART_CalendarItem"
                                      Foreground="{TemplateBinding Foreground}" 
                                      BorderBrush="{TemplateBinding BorderBrush}" 
                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                      Background="{TemplateBinding Background}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CalendarDayButtonStyle" Value="{DynamicResource Style.Calendar.DayButton}"/>
        <Setter Property="CalendarButtonStyle" Value="{DynamicResource Style.Calendar.Button}"/>
        <Style.Triggers>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Surface">
                <Setter Property="Background" Value="{DynamicResource Brush.Surface.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Surface.Paper}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="SurfaceAlternate">
                <Setter Property="Background" Value="{DynamicResource Brush.SurfaceAlternate.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Primary.Background}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Primary">
                <Setter Property="Background" Value="{DynamicResource Brush.Surface.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Primary.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Primary.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="PrimaryDarken">
                <Setter Property="Background" Value="{DynamicResource Brush.Surface.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Primary.Background.Darken}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="PrimaryLighten">
                <Setter Property="Background" Value="{DynamicResource Brush.Surface.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Primary.Background.Lighten}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Secondary">
                <Setter Property="Background" Value="{DynamicResource Brush.Surface.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Secondary.Background}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Tertiary">
                <Setter Property="Background" Value="{DynamicResource Brush.Surface.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Tertiary.Background}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource Brush.Disabled.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Darken}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Disabled.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type CalendarItem}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <Grid x:Name="PART_Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" CornerRadius="0">
                            <Border  CornerRadius="0">
                                <Grid>
                                    <Grid.Resources>
                                        <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="backBtFrame" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.15" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Ellipse x:Name="backBtFrame" Fill="{DynamicResource Brush.Surface.Border}" Opacity="0" Stretch="Fill"/>
                                                <EfControls:Icon x:Name="path" Data="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z" HorizontalAlignment="Center" Height="12" Margin="0" VerticalAlignment="Center" Width="12"/>
                                            </Grid>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="backBtFrame" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.15" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Ellipse x:Name="backBtFrame" Fill="{DynamicResource Brush.Surface.Border}" Opacity="0" Stretch="Fill"/>
                                                <EfControls:Icon x:Name="path" Data="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" HorizontalAlignment="Center" Height="12" Margin="0" VerticalAlignment="Center" Width="12"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="backBtFrame" Property="Fill" Value="{DynamicResource Brush.App.DarkWaterMark}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand" Typography.Capitals="Normal">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <!--<VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0" To="#FF73A9D8" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="buttonContent"/>
                                                            </Storyboard>
                                                        </VisualState>-->
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="buttonContent"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <ContentPresenter Margin="0,2,0,0" x:Name="buttonContent" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="36" x:Name="clWeekNames"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <EfControls:ColorZone BorderThickness="0"
                                                     Padding="30,15"
                                                     Margin="0,0,0,4"
                                                     Grid.ColumnSpan="3"
                                                     BorderBrush="{x:Null}"
                                                     Background="{TemplateBinding BorderBrush}">
                                        <StackPanel Margin="30,15">
                                            <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Calendar}}, Path=SelectedDate, StringFormat=yyyy}"/>
                                            <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Calendar}}, Path=SelectedDate, StringFormat=ddd.\, dd MMM. }" Style="{DynamicResource Style.TextBlock.SubHeader}" FontWeight="Medium" Margin="0,15,0,0"/>
                                        </StackPanel>
                                    </EfControls:ColorZone>
                                    
                                    <Button x:Name="PART_PreviousButton" Grid.Column="0" Grid.Row="1" Focusable="False" HorizontalAlignment="Left" Height="36" Template="{StaticResource PreviousButtonTemplate}" Width="36" EfAttachedProps:Control.Color="Surface"/>
                                    <Button x:Name="PART_HeaderButton" Grid.Column="1" Grid.Row="1" Focusable="False" HorizontalAlignment="Center" Foreground="{TemplateBinding Foreground}" Template="{StaticResource HeaderButtonTemplate}" VerticalAlignment="Center" EfAttachedProps:Control.Color="Surface"/>
                                    <Button x:Name="PART_NextButton" Grid.Column="2" Grid.Row="1" Focusable="False" HorizontalAlignment="Right" Height="36" Template="{StaticResource NextButtonTemplate}" Width="36" EfAttachedProps:Control.Color="Surface"/>
                                    <UniformGrid x:Name="PART_MonthViewWeekNames"
                                                 Grid.ColumnSpan="3"
                                                 Columns="7"
                                                 Rows="1"
                                                 Margin="10"
                                                 Grid.Row="2" 
                                                 Visibility="Visible">
                                        <TextBlock Text="dom." Style="{DynamicResource Style.TextBlock.Caption}" TextAlignment="Center" />
                                        <TextBlock Text="seg." Style="{DynamicResource Style.TextBlock.Caption}" TextAlignment="Center" />
                                        <TextBlock Text="ter." Style="{DynamicResource Style.TextBlock.Caption}" TextAlignment="Center" />
                                        <TextBlock Text="qua." Style="{DynamicResource Style.TextBlock.Caption}" TextAlignment="Center" />
                                        <TextBlock Text="qui." Style="{DynamicResource Style.TextBlock.Caption}" TextAlignment="Center" />
                                        <TextBlock Text="sex." Style="{DynamicResource Style.TextBlock.Caption}" TextAlignment="Center" />
                                        <TextBlock Text="sab." Style="{DynamicResource Style.TextBlock.Caption}" TextAlignment="Center" />
                                    </UniformGrid>
                                    <Grid x:Name="PART_MonthView"
                                          Grid.ColumnSpan="3"
                                          HorizontalAlignment="Center"
                                          Margin="6,0,6,10" 
                                          Grid.Row="3"
                                          Visibility="Visible" 
                                          VerticalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                    </Grid>
                                    <Grid x:Name="PART_YearView" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Margin="6,0,6,0" Grid.Row="3" Visibility="Hidden" VerticalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                        <Ellipse x:Name="PART_DisabledVisual" Fill="{DynamicResource Brush.Disabled.Background}" Opacity="0" Stretch="Fill" Stroke="{DynamicResource Brush.TextElement.Disabled}" StrokeThickness="1" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="PART_MonthViewWeekNames" Value="Hidden"/>
                            <Setter Property="Height" TargetName="clWeekNames" Value="0"/>
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="PART_MonthViewWeekNames" Value="Hidden"/>
                            <Setter Property="Height" TargetName="clWeekNames" Value="0"/>
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
