<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:EfUtilties="clr-namespace:EficazFramework.Utilities"                    
                    xmlns:EfAttachedProps="clr-namespace:EficazFramework.Controls.AttachedProperties">

    <Style TargetType="TextElement">
        <Setter Property="FontFamily" Value="{DynamicResource Font.SourceSansPro}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="{Binding Source={x:Static EfUtilties:DipHelper.FontSize_DefaultText}}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Disabled.Foreground}" />
            </Trigger>
            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelected" Value="True"/>
                    <Condition Property="IsEnabled" Value="True"/>
                    <Condition Property="ex:Control.Color" Value="Primary"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Primary.Foreground}" />
            </MultiTrigger>-->
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" >
        <Setter Property="FontFamily" Value="{DynamicResource Font.SourceSansPro}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="{Binding Source={x:Static EfUtilties:DipHelper.FontSize_DefaultText}}" />
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
        <Style.Triggers>
            <!--<Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Disabled.Foreground}" />
            </Trigger>-->
            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelected" Value="True"/>
                    <Condition Property="IsEnabled" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Control.Background.Selected}" />
            </MultiTrigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="Style.TextBlock.Body" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
    </Style>

    <Style x:Key="Style.TextBlock.Caption" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="9 pt"/>
    </Style>

    <Style x:Key="Style.TextBlock.Tip" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontStyle" Value="Italic" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="Opacity" Value="0.5"/>
        <Setter Property="Margin" Value="5,4" />
    </Style>

    <Style x:Key="Style.TextBlock.FlyoutPickerTitle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="13.05 pt"/>
        <Setter Property="FontFamily" Value="{DynamicResource Font.SourceSansPro}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="FontStretch" Value="Expanded"/>
    </Style>

    <Style x:Key="Style.TextBlock.Header" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="34.5" />
        <Setter Property="FontWeight" Value="Light"/>
    </Style>

    <Style x:Key="Style.TextBlock.SubHeader" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="25.5"/>
        <Setter Property="FontWeight" Value="Light"/>
    </Style>

    <Style x:Key="Style.TextBlock.Title" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="FontSize" Value="18 pt"/>
    </Style>

    <!-- DataGrid -->
    <Style x:Key="Style.TextElement.DataGrid" TargetType="TextElement" BasedOn="{StaticResource {x:Type TextElement}}">
        <Setter Property="FontSize" Value="{Binding Source={x:Static EfUtilties:DipHelper.FontSize_DataGridColumnText}}" />
    </Style>

    <Style x:Key="Style.TextBlock.DataGrid" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="{Binding Source={x:Static EfUtilties:DipHelper.FontSize_DataGridColumnText}}" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
    </Style>

    <Style x:Key="Style.TextBlock.DataGridHeader.MultiLine" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="{Binding Source={x:Static EfUtilties:DipHelper.FontSize_DataGridColumnText}}" />
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

</ResourceDictionary>
