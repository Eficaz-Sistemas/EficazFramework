<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:EfControls="clr-namespace:EficazFramework.Controls"
                    xmlns:EfControlsPrimitives="clr-namespace:EficazFramework.Controls.Primitives"
                    xmlns:EfConverters="clr-namespace:EficazFramework.Converters"
                    xmlns:EfAttachedProps="clr-namespace:EficazFramework.Controls.AttachedProperties"
                    xmlns:EfControlsResources="clr-namespace:EficazFramework.Resources.Strings"
                    xmlns:EfExtensions="clr-namespace:EficazFramework.Extensions">

    <EfConverters:ElevationEffectConverter x:Key="elevator"/>

    <Style TargetType="{x:Type EfControlsPrimitives:InteractiveTextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="FontFamily" Value="{DynamicResource Font.SourceSansPro}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="11.25 pt"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Background" Value="{DynamicResource Brush.Surface.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Surface.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type EfControlsPrimitives:InteractiveTextBox}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type EfControls:Icon}">
                            <Setter Property="Height" Value="16"/>
                            <Setter Property="Width" Value="16"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type EfControls:Icon}">
                                        <Path Fill="{TemplateBinding Foreground}"
                                              Width="{TemplateBinding Width}"
                                              Height="{TemplateBinding Height}"
                                              Stretch="Uniform"
                                              Data="{TemplateBinding Data}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="InvalidFocused"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard TargetName="RippleOnFocusScaleTransform">
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleX" From="0" To="1" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard TargetName="RippleOnFocusScaleTransform">
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleX" To="0" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="1*" />
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="tipTextHeader"                          
                                   Margin="0,0,0,0" 
                                   Foreground="{TemplateBinding Foreground}" 
                                   Text="{TemplateBinding EfAttachedProps:Control.TipText}" 
                                   TextAlignment="Left"
                                   FontSize="7pt"
                                   Visibility="Visible" 
                                   Padding="3,0,0,1" 
                                   RenderTransformOrigin="0.5,1">
                            <TextBlock.RenderTransform>
                                <ScaleTransform x:Name="HeaderRippleOnFocusScaleTransform" ScaleX="1" ScaleY="1" />
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="36" x:Name="btStartcolumn" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="36" x:Name="btEndcolumn" />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="BaseBackground"
	                                Background="{TemplateBinding Background}"
	                                BorderBrush="{TemplateBinding BorderBrush}"
	                                BorderThickness="{TemplateBinding BorderThickness}"
									Grid.ColumnSpan="3"
	                                CornerRadius="3" />
                            <Border x:Name="FocusBackground"
                                    Background="{x:Null}"
                                    BorderBrush="{TemplateBinding CaretBrush}"
                                    BorderThickness="0,0,0,3"
									Grid.ColumnSpan="3"
                                    CornerRadius="3"
                                    RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="RippleOnFocusScaleTransform" ScaleX="1" ScaleY="1" />
                                </Border.RenderTransform>
                            </Border>
                            <TextBlock x:Name="tipText" 
                                       Foreground="{TemplateBinding Foreground}" 
                                       FontSize="{TemplateBinding FontSize}" 
                                       Opacity="0"
                                       Margin="{TemplateBinding Padding}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       Style="{DynamicResource Style.TextBlock.Tip}" 
                                       TextAlignment="Justify" 
                                       Text="{TemplateBinding EfAttachedProps:Control.TipText}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
									   Padding="{TemplateBinding Padding}"
									   Grid.Column="1" />
                            <EfControls:ColorZone Grid.ColumnSpan="3" Opacity="0.25" EfAttachedProps:Control.CornerRadius="3"/>
                            <Button Visibility="{TemplateBinding FindButtonVisibility}" 
                                    Command="{TemplateBinding CommandPopup}" 
                                    BorderThickness="0"
                                    Content="Bt"
                                    ContentTemplate="{TemplateBinding CommandContentTemplate}"
                                    Background="Transparent"
                                    EfAttachedProps:Control.CornerRadius="3,0,0,3"
                                    EfAttachedProps:Control.Elevation="0"
                                    Margin="1"
                                    Padding="0"
						            Name="PART_PopupButton"  
						            Focusable="False"
                                    ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(EfAttachedProps:Control.TipText)}"
                                    TextBlock.Foreground="{TemplateBinding Foreground}" 
                                    TextElement.Foreground="{TemplateBinding Foreground}">
                            </Button>
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Grid.Column="1"
                                          Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <ContentPresenter Margin="1"
                                              Grid.Column="2"
                                              Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(EfAttachedProps:TextBox.EndElement)}" 
                                              TextBlock.Foreground="{TemplateBinding Foreground}" 
                                              TextElement.Foreground="{TemplateBinding Foreground}"/>
                            <Popup PopupAnimation="Fade" Name="PART_Popup" StaysOpen="False" AllowsTransparency="True">
                                <ContentPresenter Focusable="False" Content="pp" ContentTemplate="{TemplateBinding PopupContentTemplate}"/>
                            </Popup>
                            <Border x:Name="BorderError" 
                                    BorderBrush="{DynamicResource Brush.Error.Background}" 
                                    BorderThickness="1" 
                                    HorizontalAlignment="Stretch" 
                                    Opacity="0" 
                                    CornerRadius="3"
                                    Grid.ColumnSpan="3"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="BaseBackground" Value="{DynamicResource Brush.Surface.Border}"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="Opacity" TargetName="BorderError" Value="1"/>
                            <Setter Property="BorderBrush" TargetName="FocusBackground" Value="{DynamicResource Brush.Error.Background}"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="tipText" 
                                                         Storyboard.TargetProperty="Opacity" 
                                                         To="0.5" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="HeaderRippleOnFocusScaleTransform" 
                                                         Storyboard.TargetProperty="ScaleY" 
                                                         To="0" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="tipText" 
                                                         Storyboard.TargetProperty="Opacity" 
                                                         To="0" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="HeaderRippleOnFocusScaleTransform" 
                                                         Storyboard.TargetProperty="ScaleY" 
                                                         To="1" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="EfAttachedProps:Control.ShowLabel" Value="False">
                            <Setter TargetName="tipTextHeader" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="PART_ContentHost" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="FindButtonVisibility" Value="Collapsed">
                            <Setter TargetName="btStartcolumn" Property="Width" Value="0"/>
                        </Trigger>
                        <Trigger Property="EfAttachedProps:TextBox.EndElement" Value="{x:Null}">
                            <Setter TargetName="btEndcolumn" Property="Width" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="0.75"/>
                        </Trigger>
                        <Trigger Property="IsEmptyAndNotFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HeaderRippleOnFocusScaleTransform"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="0" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="tipText"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.5" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="PART_ContentHost"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.01" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HeaderRippleOnFocusScaleTransform"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="tipText"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="PART_ContentHost"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsReadOnlyCaretVisible" Value="True"/>
        <Style.Triggers>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Surface">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
                <Setter Property="CaretBrush" Value="{DynamicResource Brush.Primary.Background}"/>
                <Setter Property="SelectionBrush" Value="{DynamicResource Brush.Primary.Background}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="SurfaceAlternate">
                <Setter Property="Foreground" Value="{DynamicResource Brush.SurfaceAlternate.Foreground}"/>
                <Setter Property="CaretBrush" Value="{DynamicResource Brush.Primary.Background}"/>
                <Setter Property="SelectionBrush" Value="{DynamicResource Brush.Primary.Background}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Primary">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
                <Setter Property="CaretBrush" Value="{DynamicResource Brush.Primary.Background}"/>
                <Setter Property="SelectionBrush" Value="{DynamicResource Brush.Primary.Background}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="PrimaryDarken">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
                <Setter Property="CaretBrush" Value="{DynamicResource Brush.Primary.Background.Darken}"/>
                <Setter Property="SelectionBrush" Value="{DynamicResource Brush.Primary.Background.Darken}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="PrimaryLighten">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
                <Setter Property="CaretBrush" Value="{DynamicResource Brush.Primary.Background.Lighten}"/>
                <Setter Property="SelectionBrush" Value="{DynamicResource Brush.Primary.Background.Lighten}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Secondary">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
                <Setter Property="CaretBrush" Value="{DynamicResource Brush.Secondary.Background}"/>
                <Setter Property="SelectionBrush" Value="{DynamicResource Brush.Secondary.Background}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Tertiary">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
                <Setter Property="CaretBrush" Value="{DynamicResource Brush.Tertiary.Background}"/>
                <Setter Property="SelectionBrush" Value="{DynamicResource Brush.Tertiary.Background}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource Brush.Disabled.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Disabled.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type EfControls:AutoComplete}" BasedOn="{StaticResource {x:Type EfControlsPrimitives:InteractiveTextBox}}">
        <Setter Property="EfAttachedProps:Control.TipText" Value="{EfExtensions:Resource AutoComplete_Tooltip, ResourceManager={x:Type EfControlsResources:Controls}}"/>
        <Setter Property="CommandContentTemplate" >
            <Setter.Value>
                <DataTemplate>
                    <EfControls:Icon Opacity="0.75"
                                     Data="{DynamicResource Icon.MaterialDesign.Magnify}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="PopupContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="{DynamicResource Brush.Surface.Background}" BorderThickness="1" BorderBrush="{DynamicResource Brush.Surface.Border}">
                        <Grid>
                            <ProgressBar Margin="15" 
                                         Width="150"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Center"
                                         IsIndeterminate="True"/>
                            <ListView Focusable="False" 
                                      Margin="5"
                                      TextElement.FontSize="9pt"
                                      IsSynchronizedWithCurrentItem="True"
                                      Validation.ErrorTemplate="{x:Null}"
                                      x:Name="_PART_ListView"
                                      EfAttachedProps:Selector.AllowInactiveSelection="False">
                            </ListView>
                        </Grid>
                    </Border>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemTemplate}" Value="{x:Null}">
                            <Setter TargetName="_PART_ListView" Property="ItemTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <ContentPresenter Content="{Binding ValidatesOnNotifyDataErrors=False}" Margin="5"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type EfControls:DateInputBox}" BasedOn="{StaticResource {x:Type EfControlsPrimitives:InteractiveTextBox}}">
        <Setter Property="EfAttachedProps:Control.TipText" Value="{EfExtensions:Resource DateInputBox_Tooltip, ResourceManager={x:Type EfControlsResources:Controls}}"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="CommandContentTemplate" >
            <Setter.Value>
                <DataTemplate>
                    <EfControls:Icon Opacity="0.75"
                                     Data="{DynamicResource Icon.MaterialDesign.Calendar}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="PopupContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Calendar EfAttachedProps:Control.Elevation="3" 
                          Margin="10"
                          Effect="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(EfAttachedProps:Control.Elevation), Converter={StaticResource elevator}}"  />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>