<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:EfControls="clr-namespace:EficazFramework.Controls"
    xmlns:EfAttachedProps="clr-namespace:EficazFramework.Controls.AttachedProperties"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Style TargetType="RadioButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Surface.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard TargetName="MouseOverPresenter">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="0.25" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard TargetName="FocusedPresenter">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard TargetName="FocusedPresenter">
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <EfControls:ColorZone x:Name="mainColorZone"
                                            EfAttachedProps:Control.CornerRadius="100" 
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Margin="1"  >
                            <Border x:Name="radioButtonBorder" 
                                    CornerRadius="100"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid x:Name="markGrid" Margin="3">
                                    <Ellipse Margin="0" 
                                         x:Name="optionMark" 
                                         Fill="{Binding ElementName=mainColorZone, Path=Foreground}"
                                         Width="10" Height="10" 
                                         Visibility="Hidden" />
                                </Grid>
                            </Border>
                        </EfControls:ColorZone>
                        <ContentPresenter x:Name="contentPresenter" 
                                          TextElement.Foreground="{TemplateBinding Foreground}" 
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Grid.Column="1" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Ellipse x:Name="FocusedPresenter" StrokeThickness="2" Stroke="{Binding ElementName=mainColorZone, Path=Foreground}" Height="10" Width="10" Opacity="0"/>
                        <Ellipse x:Name="MouseOverPresenter" StrokeThickness="0" Fill="{Binding ElementName=mainColorZone, Path=Foreground}" Height="10" Width="10" Opacity="0"  />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="false">
                            <Setter Property="Padding" Value="0,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{DynamicResource Brush.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{DynamicResource Brush.Disabled.Background}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource Brush.Brush.Disabled.Background}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="optionMark" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="optionMark" Value="Visible"/>
                            <Setter Property="Opacity" TargetName="optionMark" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Surface">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="SurfaceAlternate">
                <Setter Property="Foreground" Value="{DynamicResource Brush.SurfaceAlternate.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Primary">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="PrimaryDarken">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="PrimaryLighten">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Secondary">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Tertiary">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="Style.RadioButton.MDIContainerTaskApp" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Surface.Border}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="GroupName" Value="MDI_Container_RadioGroup" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="ToolTipService.Placement" Value="Top" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Path Data="{Binding}" Stretch="Uniform" Width="22"  Height="22"
                          Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Checked" >
                                    <Storyboard TargetName="RippleOnFocusScaleTransform">
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleX" From="0" To="1" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" >
                                    <Storyboard TargetName="RippleOnFocusScaleTransform">
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleX" To="0" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" BorderThickness="0" 
                                Background="Transparent" Margin="4"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <Rectangle x:Name="SelectedBckground"
                                               StrokeThickness="1"
                                               Stroke="{TemplateBinding BorderBrush}"
                                               Visibility="Collapsed"
                                               Margin="4" 
                                               RadiusX="5"
                                               RadiusY="5" />
                        <Rectangle x:Name="MouseOverPresenter" 
                                   RadiusX="5" 
                                   RadiusY="5" 
                                   Opacity="0.25"
                                   Margin="4" 
                                   StrokeThickness="0"
                                   Fill="{TemplateBinding Foreground}" 
                                   Stroke="{TemplateBinding BorderBrush}" 
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="CheckedPresenter" 
                                   Margin="4,4,4,5"
                                   Width="18"
                                   RadiusX="2"  RadiusY="2" 
                                   Height="3"
                                   VerticalAlignment="Bottom" 
                                   Fill="{TemplateBinding Foreground}" 
                                   Stroke="{x:Null}"
                                   StrokeThickness="0"
                                   Visibility="Collapsed"
                                   RenderTransformOrigin="0.5,0.5" >
                            <Rectangle.RenderTransform>
                                <ScaleTransform x:Name="RippleOnFocusScaleTransform" ScaleX="0" ScaleY="1" />
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="SelectedBckground" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckedPresenter" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverPresenter" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="EfAttachedProps:Control.Color" Value="Surface">
                            <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
                            <Setter TargetName="CheckedPresenter" Property="Fill" Value="{DynamicResource Brush.Primary.Foreground}"/>
                        </Trigger>
                        <Trigger Property="EfAttachedProps:Control.Color" Value="SurfaceAlternate">
                            <Setter Property="Foreground" Value="{DynamicResource Brush.SurfaceAlternate.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Surface">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="SurfaceAlternate">
                <Setter Property="Foreground" Value="{DynamicResource Brush.SurfaceAlternate.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Primary">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Primary.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="PrimaryDarken">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="PrimaryLighten">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Surface.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Secondary">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Secondary.Foreground}"/>
            </Trigger>
            <Trigger Property="EfAttachedProps:Control.Color" Value="Tertiary">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Tertiary.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    




</ResourceDictionary>
