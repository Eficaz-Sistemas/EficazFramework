@inject MudBlazor.ISnackbar? Snackbar;

<h3 class="mx-4 mt-4">MdiAppHelloWorld</h3>
<MudPaper Class="ma-4" Elevation="1">
    <MudButton Class="ma-4" Variant="@Variant.Filled" Color="Color.Primary" OnClick="ShowMessage">MudDialog</MudButton>
    <MudButton Class="ma-4" Variant="@Variant.Filled" Color="Color.Primary" OnClick="ShowViewModelMessage">Mdi Dialog</MudButton>
    <MudButton Class="ma-4" Variant="@Variant.Filled" Color="Color.Primary" OnClick="ShowSnackBar">Mdi SnackBar</MudButton>
</MudPaper>

@code {

    [CascadingParameter] EficazFramework.Components.MdiWindow _mdi { get; set; } = null!;

    private readonly Events.MessageEventArgs _labs = new()
        {
            Title = "Teste",
            Content = "Funciona?",
            Buttons = Events.MessageButtons.YesNo,
            Type = Events.MessageType.Default
        };

    private async void ShowMessage()
    {
        DialogParameters parameters = new();
        parameters?.Add("Args", _labs);
        var dialogRef = await _mdi?.ShowDialogAsync<EficazFramework.Components.Dialogs.ViewModelDialog>(_labs.Title, parameters)!;
        var result = (Events.MessageResult)(await dialogRef!.Result)!.Data!;
        Snackbar!.Add(result.ToString());

    }

    private async void ShowViewModelMessage()
    {
        var result = await EficazFramework.Components.Dialogs.ViewModelDialog.ShowAsync(_mdi, _labs);
        Snackbar!.Add(result.ToString());
    }

    private void ShowSnackBar()
    {
        _mdi.ConfigureSnackBar(new SnackbarConfiguration()
            {
                BackgroundBlurred = true,
                ShowCloseIcon = true,
                PositionClass = MudBlazor.Defaults.Classes.Position.BottomCenter,
            });
        _mdi.AddSnackbar("Hello World!!", Severity.Info);
    }

}