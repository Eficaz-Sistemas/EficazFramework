@using Microsoft.AspNetCore.Components.Web
@using EficazFramework.Application
@using System.Drawing
@namespace EficazFramework.Components
@inherits MudBlazor.MudComponentBase

<div class="@Classname" 
     style="@StyleName"
     @onpointerup="OnPointerUp"
     @onpointermove="OnPointerMove">
    <CascadingValue Value="this">
        @*MDI AREA*@
        @if (BreakpointListener.IsMediaSize(Breakpoint, _breakpoint))
        {
            <div class="d-flex flex-grow-1">
                @if(SelectedApp != null)
                {
                    <MdiWindow ApplicationInstance="SelectedApp"
                               Title="@SelectedApp.Title"
                               Icon="@(SelectedApp.Targets["Blazor"].Icon?.ToString())"
                               IsMaximized="true">
                        <DynamicComponent Type="@((Type)(SelectedApp.Targets["Blazor"].StartupUriOrType ?? typeof(string)))" />
                    </MdiWindow>
                }
            </div>
        }
        else
        {
            <div class="d-flex flex-grow-1"
                 ondragover="event.preventDefault();"
                 ondragstart="event.dataTransfer.setData('', event.target.id);">
                @foreach (var item in RunningApplications())
                {
                    <MdiWindow ApplicationInstance="item"
                               Title="@item.Title"
                               Icon="@(item.Targets["Blazor"].Icon?.ToString())"
                               IsMaximized="@((bool?)item.Targets["Blazor"].Properties["IsMaximized"] ?? false)">
                        <DynamicComponent Type="@((Type)(item.Targets["Blazor"].StartupUriOrType ?? typeof(string)))" />
                    </MdiWindow>
                }
            </div>
        }
        <div class="d-flex" style="background-color: var(--mud-palette-background-grey);z-index: var(--mud-zindex-appbar) - 101; height: 48px;">
            @*TASKBAR*@         
            @ToolbarLeftContent
            @foreach (var item in RunningApplications())
            {
                <MudBlazor.MudTooltip Text="@item.Title">
                    <MudBlazor.MudIconButton Variant="@MudBlazor.Variant.Filled"
                                                Color="@MudBlazor.Color.Transparent"
                                                Class="ef-mdi-buttons-toolbar"
                                                Icon="@(item.Targets["Blazor"].Icon?.ToString())"
                                                Size="@MudBlazor.Size.Medium"
                                                DisableElevation
                                                Style="@TaskBarAppInstanceButtonStyle(item)"
                                                OnClick="() => LoadApplication(item.Metadata)"/>
                </MudBlazor.MudTooltip>
            }
            <MudBlazor.MudSpacer/>
            @ToolbarRightContent
            </div>
    </CascadingValue>
</div>