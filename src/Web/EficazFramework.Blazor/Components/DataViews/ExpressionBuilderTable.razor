@namespace EficazFramework.Components.Primitives
@using EficazFramework.Extensions;
@inherits MudBlazor.MudComponentBase
@inject MudBlazor.IBrowserViewportService BrowserViewportService

<MudBlazor.MudTable Dense 
                    Breakpoint="@MudBlazor.Breakpoint.Sm" 
                    Elevation="0" Items="@vm.Items" 
                    Class="flex-grow-1 order-2 border-0">
    <HeaderContent>
        @if (vm.CanAddExpressions)
        {
            <MudBlazor.MudTh Class="py-0 px-4" Style="width: 1px;">
                <MudBlazor.MudTooltip Text="@EficazFramework.Resources.Strings.Components.ExpressionBuilder_AddCommand" Class="flex-grow-0 order-1" >
                    <MudBlazor.MudIconButton Icon="@MudBlazor.Icons.Material.Filled.Add" OnClick="() => OnAddCommand()" Size="MudBlazor.Size.Small"/>
                </MudBlazor.MudTooltip>
            </MudBlazor.MudTh>
        }
        <MudBlazor.MudTh Style="width: 15%;">@(EficazFramework.Resources.Strings.Components.ExpressionBuilder_CL_Field):</MudBlazor.MudTh>
        <MudBlazor.MudTh Style="width: 15%;">@(EficazFramework.Resources.Strings.Components.ExpressionBuilder_CL_Operator):</MudBlazor.MudTh>
        <MudBlazor.MudTh Style="min-width:120px; width: 70%;">@(EficazFramework.Resources.Strings.Components.ExpressionBuilder_CL_Value):</MudBlazor.MudTh>
    </HeaderContent>
    <RowTemplate>
        @if (vm.CanAddExpressions)
        {
            <MudBlazor.MudTd Class="py-0 px-4">
                <MudBlazor.MudTooltip Text="@EficazFramework.Resources.Strings.Components.ExpressionBuilder_DeleteCommand">
                    <MudBlazor.MudIconButton Icon="@MudBlazor.Icons.Material.Filled.Delete" OnClick="() => OnDeleteCommand(context)" Size="MudBlazor.Size.Small" />
                </MudBlazor.MudTooltip>
            </MudBlazor.MudTd>
        }
        @*Property*@
        <MudBlazor.MudTd>
            @if (vm.CanBuildCustomExpressions)
            {
            <MudBlazor.MudSelect Margin="@MudBlazor.Margin.Dense"
                                    T="@EficazFramework.Expressions.ExpressionProperty" 
                                    @bind-Value="@context.SelectedProperty" 
                                    FitContent
                                    
                                    FullWidth
                                    Class="ef-expression-table-cell">
                @foreach (EficazFramework.Expressions.ExpressionProperty prop in vm.Properties)
                    {
                    <MudBlazor.MudSelectItem T="@EficazFramework.Expressions.ExpressionProperty" Value="@prop">
                        @prop.DisplayName
                    </MudBlazor.MudSelectItem>
                    }
            </MudBlazor.MudSelect>
            }
            else
            {
                if(context.SelectedProperty != null)
                {
                    <MudBlazor.MudText Typo="@MudBlazor.Typo.body2">@context.SelectedProperty?.DisplayName</MudBlazor.MudText>
                }
                else
                {
                    <MudBlazor.MudText Typo="@MudBlazor.Typo.body2">n/a</MudBlazor.MudText>
                }
            }
        </MudBlazor.MudTd>
        @*Operator*@
        <MudBlazor.MudTd>
            @if (vm.CanBuildCustomExpressions)
            {
                <MudBlazor.MudSelect Margin="@MudBlazor.Margin.Dense"
                                        T="@EficazFramework.Enums.CompareMethod" 
                                        @bind-Value="@context.Operator" 
                                        Converter="@converter"  
                                        FitContent
                                        FullWidth
                                        Class="ef-expression-table-cell">
                    @if(context.SelectedProperty != null)
                    {
                        @foreach (@EficazFramework.Extensions.EnumMember op in context.AvailableOperators)
                        {
                        <MudBlazor.MudSelectItem T="@EficazFramework.Enums.CompareMethod" Value="@((EficazFramework.Enums.CompareMethod)op.Value)">
                            @op.Description
                        </MudBlazor.MudSelectItem>
                        }
                    }
                </MudBlazor.MudSelect>
            }
            else
            {
                @if(context.SelectedProperty != null)
                {
                    <MudBlazor.MudText Typo="@MudBlazor.Typo.body2">@context.AvailableOperators.Where((e) => (EficazFramework.Enums.CompareMethod)e.Value == context.Operator).Select((e) => e.Description).FirstOrDefault()</MudBlazor.MudText>
                }
                else
                {
                    <MudBlazor.MudText Typo="@MudBlazor.Typo.body2">n/a</MudBlazor.MudText> 
                }
            }
        </MudBlazor.MudTd>
        @*Values*@
        <MudBlazor.MudTd>
            @if (context.Operator == EficazFramework.Enums.CompareMethod.Between)
                {
                <div class="d-flex ef-expression-between">

                    @switch (context.SelectedProperty.Editor)
                        {
                            case EficazFramework.Expressions.ExpressionEditor.Date:
                                <MudBlazor.MudDateRangePicker Margin="@MudBlazor.Margin.Dense"
                                                              Class="ef-expression-table-cell flex-grow-1"
                                                              @bind-DateRange="_selectedDateRange"
                                                              @bind-DateRange:after="@(() => OnDateRangePickerSelectCompleted(context))"
                                                              DateFormat="d"
                                                              PickerVariant="@pickerVariant" />
                                break;

                            case EficazFramework.Expressions.ExpressionEditor.Number:
                                <EficazFramework.Components.NumberField Margin="@MudBlazor.Margin.Dense" 
                                                                        @bind-Value="context.Value1"
                                                                        Class="flex-grow-0 ef-expression-table-cell"
                                                                        FullWidth
                                                                        DecimalPlaces="context.SelectedProperty?.DecimalPlaces ?? 8" />
                                                    
                                <MudBlazor.MudText Typo="@MudBlazor.Typo.body2" Class="flex-grow-0 mx-4 align-self-center">@($"  {EficazFramework.Resources.Strings.Components.ExpressionBuilder_Between_Separator}  ")</MudBlazor.MudText>
                                                    
                                <EficazFramework.Components.NumberField Margin="@MudBlazor.Margin.Dense" 
                                                                        @bind-Value="context.Value2"
                                                                        Class="flex-grow-0 ef-expression-table-cell"
                                                                        FullWidth
                                                                        DecimalPlaces="context.SelectedProperty?.DecimalPlaces ?? 8" />
                                break;
                        }
                </div>
                }
                else
                {
                    if (context.SelectedProperty != null)
                    {
                        switch (context.SelectedProperty.Editor)
                        {
                            case EficazFramework.Expressions.ExpressionEditor.Date:
                                <MudBlazor.MudDatePicker Margin="@MudBlazor.Margin.Dense" 
                                                            Class="ef-expression-table-cell"
                                                            @bind-Date="context.DateTimeValue1" 
                                                            DateFormat="d"
                                                            PickerVariant="@pickerVariant" />
                                break;

                            case EficazFramework.Expressions.ExpressionEditor.Number:
                                <EficazFramework.Components.NumberField Margin="@MudBlazor.Margin.Dense"
                                                                        Class="ef-expression-table-cell"
                                                                        @bind-Value="context.Value1"
                                                                        FullWidth
                                                                        DecimalPlaces="context.SelectedProperty?.DecimalPlaces ?? 8" />
                                break;

                            case EficazFramework.Expressions.ExpressionEditor.BoolSelection:
                                <MudBlazor.MudCheckBox Class="ef-expression-table-cell"
                                                       @bind-Value="context.Value1" 
                                                       Converter="@(new EficazFramework.Converters.ObjectToBoolConverter())"
                                                       Color="@MudBlazor.Color.Primary"><span class="ml-2">@(((bool?)context.Value1)?.GetBoolValue())</span></MudBlazor.MudCheckBox>
                                break;

                            case EficazFramework.Expressions.ExpressionEditor.EnumLocalizedSelection:
                                <MudBlazor.MudSelect Margin="@MudBlazor.Margin.Dense"
                                                     Class="ef-expression-table-cell"
                                                     @bind-Value="@context.Value1"
                                                     FullWidth>
                                    @foreach (EficazFramework.Extensions.EnumMember enummember in context.EnumValues)
                                        {
                                        <MudBlazor.MudSelectItem Value="@enummember.Value">
                                            @enummember.Description
                                        </MudBlazor.MudSelectItem>
                                        }
                                </MudBlazor.MudSelect>
                                break;

                            case EficazFramework.Expressions.ExpressionEditor.EnumSelection:
                                <MudBlazor.MudSelect Margin="@MudBlazor.Margin.Dense"
                                                     Class="ef-expression-table-cell"
                                                     @bind-Value="@context.Value1"
                                                 FullWidth>
                                    @foreach (EficazFramework.Extensions.EnumMember enummember in context.EnumValues)
                                        {
                                        <MudBlazor.MudSelectItem Value="@enummember.Value">
                                            @enummember.Description
                                        </MudBlazor.MudSelectItem>
                                        }
                                </MudBlazor.MudSelect>
                                break;

                            case EficazFramework.Expressions.ExpressionEditor.Findable:
                                <MudBlazor.MudAutocomplete Margin="@MudBlazor.Margin.Dense"
                                                            @bind-Value="context.Value1"
                                                            SearchFunc="async (text, token) => await OnAutoCompleteSearch(text, context.SelectedPropertyPath)" 
                                                            CoerceText 
                                                            FullWidth 
                                                            Class="ef-expression-table-cell" />
                                break;

                            default:
                                <MudBlazor.MudTextField Margin="@MudBlazor.Margin.Dense" 
                                                        Class="ef-expression-table-cell"
                                                        @bind-Value="context.Value1" 
                                                        Converter="new StringObjConverter()"
                                                        FullWidth/>
                                break;
                        }
                    }
                    else
                    {
                    <MudBlazor.MudText Typo="@MudBlazor.Typo.body2">...</MudBlazor.MudText>
                    }
                }
        </MudBlazor.MudTd>
    </RowTemplate>
</MudBlazor.MudTable>